<!DOCTYPE chapter>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="udr-psql" xml:lang="ru">
    <info>
        <title>Объявления UDR</title>
    </info>

    <para>UDR могут быть добавлены или удалены из базы данных с помощью DDL команд подобно тому, как
        вы добавляете или удаляете обычные PSQL процедуры, функции или триггеры. В этом случае
        вместо тела триггера указывается место его расположения во внешнем модуле с помощью
        предложения <database>EXTERNAL NAME</database>. </para>
    <para>Рассмотрим синтаксис этого предложения, он будет общим для внешних процедур, функций и
        триггеров.</para>

    <formalpara>
        <title>Синтаксис:</title>

        <para><literallayout class="monospaced">
EXTERNAL NAME '<replaceable>&lt;extname&gt;</replaceable>' ENGINE <replaceable>&lt;engine&gt;</replaceable> 
[AS <replaceable>&lt;extbody&gt;</replaceable>]

<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'  
                       </literallayout></para>
    </formalpara>

    <para>Аргументом этого предложения EXTERNAL NAME является строка, указывающая на расположение
        функции во внешнем модуле. Для внешних модулей, использующих движок UDR, в этой строке через
        разделитель указано имя внешнего модуля, имя функции внутри модуля и определённая
        пользователем информация. В качестве разделителя используется восклицательный знак
        (!).</para>
    <para>В предложении ENGINE указывается имя движка для обработки подключения внешних модулей. В
        Firebird для работы с внешними модулями написанных на компилируемых языках (C, C++, Pascal)
        используется движок UDR. Для внешних функциях написанных на Java требуется движок
        Java.</para>
    <para>После ключевого слова AS может быть указан строковый литерал — "тело" внешнего модуля
        (процедуры. функции или триггера), оно может быть использовано внешним модулем для различных
        целей. Например, может быть указан SQL запрос для доступа к внешней БД или текст на
        некотором языке для интерпретации вашей функцией.</para>

    <section xml:id="udr-function">
        <info>
            <title>Внешние функции</title>
        </info>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
{CREATE [OR ALTER] | RECREATE} FUNCTION <replaceable>funcname</replaceable> [(<replaceable>&lt;inparam&gt;</replaceable> [, <replaceable>&lt;inparam&gt;</replaceable> ...])]   
RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] [DETERMINISTIC]     
EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> 
[AS <replaceable>&lt;extbody&gt;</replaceable>]
                
                  
<replaceable>&lt;inparam&gt;</replaceable> ::= <replaceable>&lt;param_decl&gt;</replaceable> [{= | DEFAULT} <replaceable>&lt;value&gt;</replaceable>]  
                    
<replaceable>&lt;value&gt;</replaceable> ::=  {<replaceable>literal</replaceable> | NULL | <replaceable>context_var</replaceable>} 
                    
<replaceable>&lt;param_decl&gt;</replaceable> ::= <replaceable>paramname</replaceable> <replaceable>&lt;type&gt;</replaceable> [NOT NULL] [COLLATE <replaceable>collation</replaceable>]
                    
<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'    

<replaceable>&lt;type&gt;</replaceable> ::= <replaceable>&lt;datatype&gt;</replaceable> | [TYPE OF] <replaceable>domain</replaceable> | TYPE OF COLUMN <replaceable>rel</replaceable>.<replaceable>col</replaceable> 
                    
<replaceable>&lt;datatype&gt;</replaceable> ::= 
    {SMALLINT | INT[EGER] | BIGINT} 
  | BOOLEAN 
  | {FLOAT | DOUBLE PRECISION} 
  | {DATE | TIME | TIMESTAMP}
  | {DECIMAL | NUMERIC} [(<replaceable>precision</replaceable> [, <replaceable>scale</replaceable>])] 
  | {CHAR | CHARACTER | CHARACTER VARYING | VARCHAR} [(<replaceable>size</replaceable>)]
    [CHARACTER SET <replaceable>charset</replaceable>]
  | {NCHAR | NATIONAL CHARACTER | NATIONAL CHAR} [VARYING] [(<replaceable>size</replaceable>)] 
  | BLOB [SUB_TYPE {<replaceable>subtype_num</replaceable> | <replaceable>subtype_name</replaceable>}] 
    [SEGMENT SIZE <replaceable>seglen</replaceable>] [CHARACTER SET <replaceable>charset</replaceable>]
  | BLOB [(<replaceable>seglen</replaceable> [, <replaceable>subtype_num</replaceable>])]                     
                       </literallayout></para>
        </formalpara>

        <para>Все параметры внешней функции можно изменить с помощью оператора ALTER
            FUNCTION.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
ALTER FUNCTION <replaceable>funcname</replaceable> [(<replaceable>&lt;inparam&gt;</replaceable> [, <replaceable>&lt;inparam&gt;</replaceable> ...])]   
RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] [DETERMINISTIC]     
EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> 
[AS <replaceable>&lt;extbody&gt;</replaceable>]   

<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'
                       </literallayout></para>
        </formalpara>

        <para>Удалить внешнюю функцию можно с помощью оператора DROP FUNCTION.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
DROP FUNCTION <replaceable>funcname</replaceable>                  
                       </literallayout></para>
        </formalpara>

        <para>
            <table frame="all">
                <title>Некоторые параметры внешней функции</title>
                <?dbfo keep-together='auto'?>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                    <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                    <thead>
                        <row>
                            <entry align="center">Параметр</entry>
                            <entry align="center">Описание</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><replaceable>funcname</replaceable></entry>
                            <entry>
                                <para>Имя хранимой функции. Может содержать до 31 байта.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>inparam</replaceable></entry>
                            <entry>
                                <para>Описание входного параметра.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>module name</replaceable></entry>
                            <entry>
                                <para>Имя внешнего модуля, в котором расположена функция.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>routine name</replaceable></entry>
                            <entry>
                                <para>Внутреннее имя функции внутри внешнего модуля. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>misc info</replaceable></entry>
                            <entry>
                                <para>Определяемая пользователем информация для передачи в функцию
                                    внешнего модуля. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>engine</replaceable></entry>
                            <entry>
                                <para>Имя движка для использования внешних функций. Обычно
                                    указывается имя UDR. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>extbody</replaceable></entry>
                            <entry>Тело внешней функции. Строковый литерал который может
                                использоваться UDR для различных целей.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>Здесь мы не будем описывать синтаксис входных параметров и выходного результата. Он
            полностью соответствует синтаксису для обычных PSQL функций, который подробно описан в
            "Руководстве по языку SQL". Вместо этого приведём примеры объявления внешних функций с
            пояснениями.</para>

        <example>
            <title>Функция сложения трёх аргументов</title>

            <para>
                <programlisting language="sql">
create function sum_args (
    n1 integer,
    n2 integer,
    n3 integer
) returns integer
    external name 'udrcpp_example!sum_args'
    engine udr;                  
                       </programlisting>
            </para>

            <para>Реализация функции находится в модуле udrcpp_example. Внутри этого модуля функция
                зарегистрирована под именем sum_args. Для работы внешней функции используется движок
                UDR.</para>
        </example>

        <example>
            <title>Функция на языке Java</title>

            <para>
                <programlisting language="sql">
create or alter function regex_replace (
  regex varchar(60),
  str varchar(60),
  replacement varchar(60)
) returns varchar(60) 
  external name 'org.firebirdsql.fbjava.examples.fbjava_example.FbRegex.replace(
      String, String, String)'
  engine java;                 
                       </programlisting>
            </para>

            <para>Реализация функции находится в статической функции
                    <methodname>replace</methodname> класса
                    <classname>org.firebirdsql.fbjava.examples.fbjava_example.FbRegex</classname>.
                Для работы внешней функции используется движок Java.</para>
        </example>

    </section>

    <section xml:id="udr-procedure">
        <info>
            <title>Внешние процедуры</title>
        </info>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
{CREATE [OR ALTER] | RECREATE} PROCEDURE <replaceable>procname</replaceable> [(<replaceable>&lt;inparam&gt;</replaceable> [, <replaceable>&lt;inparam&gt;</replaceable> ...])]   
RETURNS (<replaceable>&lt;outparam&gt;</replaceable> [, <replaceable>&lt;outparam&gt;</replaceable> ...])
EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> 
[AS <replaceable>&lt;extbody&gt;</replaceable>]   
                
<replaceable>&lt;inparam&gt;</replaceable> ::= <replaceable>&lt;param_decl&gt;</replaceable> [{= | DEFAULT} <replaceable>&lt;value&gt;</replaceable>]  

<replaceable>&lt;outparam&gt;</replaceable>  ::=  <replaceable>&lt;param_decl&gt;</replaceable>  
                    
<replaceable>&lt;value&gt;</replaceable> ::=  {<replaceable>literal</replaceable> | NULL | <replaceable>context_var</replaceable>} 
                    
<replaceable>&lt;param_decl&gt;</replaceable> ::= <replaceable>paramname</replaceable> <replaceable>&lt;type&gt;</replaceable> [NOT NULL] [COLLATE <replaceable>collation</replaceable>]
                    
<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'    

<replaceable>&lt;type&gt;</replaceable> ::= <replaceable>&lt;datatype&gt;</replaceable> | [TYPE OF] <replaceable>domain</replaceable> | TYPE OF COLUMN <replaceable>rel</replaceable>.<replaceable>col</replaceable> 
                    
<replaceable>&lt;datatype&gt;</replaceable> ::= 
    {SMALLINT | INT[EGER] | BIGINT} 
  | BOOLEAN 
  | {FLOAT | DOUBLE PRECISION} 
  | {DATE | TIME | TIMESTAMP}
  | {DECIMAL | NUMERIC} [(<replaceable>precision</replaceable> [, <replaceable>scale</replaceable>])] 
  | {CHAR | CHARACTER | CHARACTER VARYING | VARCHAR} [(<replaceable>size</replaceable>)]
    [CHARACTER SET <replaceable>charset</replaceable>]
  | {NCHAR | NATIONAL CHARACTER | NATIONAL CHAR} [VARYING] [(<replaceable>size</replaceable>)] 
  | BLOB [SUB_TYPE {<replaceable>subtype_num</replaceable> | <replaceable>subtype_name</replaceable>}] 
    [SEGMENT SIZE <replaceable>seglen</replaceable>] [CHARACTER SET <replaceable>charset</replaceable>]
  | BLOB [(<replaceable>seglen</replaceable> [, <replaceable>subtype_num</replaceable>])]                 
                </literallayout>
            </para>
        </formalpara>

        <para>Все параметры внешней процедуры можно изменить с помощью оператора ALTER
            PROCEDURE.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
ALTER PROCEDURE <replaceable>procname</replaceable> [(<replaceable>&lt;inparam&gt;</replaceable> [, <replaceable>&lt;inparam&gt;</replaceable> ...])]   
RETURNS (<replaceable>&lt;outparam&gt;</replaceable> [, <replaceable>&lt;outparam&gt;</replaceable> ...])
EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> 
[AS <replaceable>&lt;extbody&gt;</replaceable>]                  
                                </literallayout>
            </para>
        </formalpara>

        <para>Удалить внешнюю процедуру можно с помощью оператора DROP PROCEDURE.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
DROP PROCEDURE <replaceable>procname</replaceable>                  
                       </literallayout></para>
        </formalpara>

        <para>
            <table frame="all">
                <title>Некоторые параметры внешней процедуры</title>
                <?dbfo keep-together='auto'?>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                    <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                    <thead>
                        <row>
                            <entry align="center">Параметр</entry>
                            <entry align="center">Описание</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><replaceable>procname</replaceable></entry>
                            <entry>
                                <para>Имя хранимой процедуры. Может содержать до 31 байта.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>inparam</replaceable></entry>
                            <entry>
                                <para>Описание входного параметра.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>outparam</replaceable></entry>
                            <entry>
                                <para>Описание выходного параметра.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>module name</replaceable></entry>
                            <entry>
                                <para>Имя внешнего модуля, в котором расположена процедура.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>routine name</replaceable></entry>
                            <entry>
                                <para>Внутреннее имя процедуры внутри внешнего модуля. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>misc info</replaceable></entry>
                            <entry>
                                <para>Определяемая пользователем информация для передачи в процедуру
                                    внешнего модуля. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>engine</replaceable></entry>
                            <entry>
                                <para>Имя движка для использования внешних порцедур. Обычно
                                    указывается имя UDR. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>extbody</replaceable></entry>
                            <entry>Тело внешней процедуры. Строковый литерал который может
                                использоваться UDR для различных целей.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>Здесь мы не будем описывать синтаксис входных и выходных параметров. Он полностью
            соответствует синтаксису для обычных PSQL процедур, который подробно описан в
            "Руководстве по языку SQL". Вместо этого приведём примеры объявления внешних процедур с
            пояснениями.</para>

        <example>
            <title>Процедура генерации строк результата</title>

            <para>
                <programlisting language="sql">
create procedure gen_rows_pascal (
    start_n integer not null,
    end_n integer not null
) returns (
    result integer not null
)
    external name 'pascaludr!gen_rows'
    engine udr;                  
                       </programlisting>
            </para>

            <para>Реализация функции находится в модуле pascaludr. Внутри этого модуля процедура
                зарегистрирована под именем gen_rows. Для работы внешней процедуры используется
                движок UDR.</para>
        </example>

        <example>
            <title>Процедура сохранения произвольных сообщений в лог</title>

            <para>
                <programlisting language="sql">
create or alter procedure write_log (
  message varchar(100)
)                  
  external name 'pascaludr!write_log'
  engine udr;                       
                </programlisting>
            </para>

            <para>Реализация функции находится в модуле pascaludr. Внутри этого модуля процедура
                зарегистрирована под именем write_log. Для работы внешней процедуры используется
                движок UDR.</para>

        </example>

        <example>
            <title>Выборка записей из таблицы employee внешней базы данных</title>

            <para>
                <programlisting language="sql">
create or alter procedure employee_pgsql (
  -- Firebird 3.0.0 has a bug with external procedures without parameters
  dummy integer = 1  
) returns (
  id type of column employee.id,
  name type of column employee.name
)
  external name 'org.firebirdsql.fbjava.examples.fbjava_example.FbJdbc
    .executeQuery()!jdbc:postgresql:employee|postgres|postgres'
  engine java
  as 'select * from employee';                       
                </programlisting>
            </para>

            <para>Реализация функции находится в статической функции
                    <methodname>executeQuery</methodname> класса
                    <classname>org.firebirdsql.fbjava.examples.fbjava_example.FbJdbc</classname>.
                После восклицательного знака (!) располагаются сведения для подключения к внешней
                базе данных через JDBC. Для работы внешней функции используется движок Java. Здесь в
                качестве "тела" внешней процедуру передаётся SQL запрос для извлечения данных. </para>

        </example>
        <note>
            <para>В этой процедуре используется заглушка, в которой передаётся неиспользуемый
                параметр. Это связано с тем, что в Firebird 3.0 присутствует баг с обработкой
                внешних процедур без параметров.</para>
        </note>
    </section>

    <section xml:id="udr-package">
        <info>
            <title>Размещение внешних процедур и функций внутри пакетов</title>
        </info>

        <para>Группу взаимосвязанных процедур и функций удобно размещать в PSQL пакетах. В пакетах
            могут быть расположены как внешние, так и обычные PSQL процедуры и функции.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para>
                <literallayout class="monospaced">
{CREATE [OR ALTER] | RECREATE} PACKAGE <replaceable>package_name</replaceable>  
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
END

{CREATE | RECREATE} PACKAGE BODY <replaceable>package_name</replaceable>  
AS
BEGIN
  [<replaceable>&lt;package_item&gt;</replaceable> ...]
  [<replaceable>&lt;package_body_item&gt;</replaceable> ...]                                                        
END

<replaceable>&lt;package_item&gt;</replaceable> ::=
    <replaceable>&lt;function_decl&gt;</replaceable>; 
  | <replaceable>&lt;procedure_decl&gt;</replaceable>;
                            
<replaceable>&lt;function_decl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC]    
                            
<replaceable>&lt;procedure_decl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                           

<replaceable>&lt;package_body_item&gt;</replaceable> ::=
    <replaceable>&lt;function_impl&gt;</replaceable> 
  | <replaceable>&lt;procedure_impl&gt;</replaceable>

<replaceable>&lt;function_impl&gt;</replaceable> ::=
  FUNCTION <replaceable>func_name</replaceable> [(<replaceable>&lt;in_impl_params&gt;</replaceable>)] 
  RETURNS <replaceable>&lt;type&gt;</replaceable> [COLLATE <replaceable>collation</replaceable>] 
  [DETERMINISTIC] 
  <replaceable>&lt;routine body&gt;</replaceable> 
      
<replaceable>&lt;procedure_impl&gt;</replaceable> ::=
  PROCEDURE <replaceable>proc_name</replaceable> [(<replaceable>&lt;in_impl_params&gt;</replaceable>)] 
  [RETURNS (<replaceable>&lt;out_params&gt;</replaceable>)]                             
  <replaceable>&lt;routine body&gt;</replaceable>          

<replaceable>&lt;routine body&gt;</replaceable> ::= <replaceable>&lt;sql routine body&gt;</replaceable> | <replaceable>&lt;external body reference&gt;</replaceable>                   
    
<replaceable>&lt;sql routine body&gt;</replaceable> ::=  
  AS       
    [<replaceable>&lt;declarations&gt;</replaceable>]       
  BEGIN       
    [<replaceable>&lt;PSQL_statements&gt;</replaceable>]       
  END                    

<replaceable>&lt;declarations&gt;</replaceable> ::= <replaceable>&lt;declare_item&gt;</replaceable> [<replaceable>&lt;declare_item&gt;</replaceable> ...]

<replaceable>&lt;declare_item&gt;</replaceable> ::=      
    <replaceable>&lt;declare_var&gt;</replaceable>; 
  | <replaceable>&lt;declare_cursor&gt;</replaceable>; 
  | <replaceable>&lt;subroutine declaration&gt;</replaceable>;
  | <replaceable>&lt;subroutine implimentation&gt;</replaceable>  

<replaceable>&lt;subroutine declaration&gt;</replaceable> ::= <replaceable>&lt;subfunc_decl&gt;</replaceable> | <replaceable>&lt;subproc_decl&gt;</replaceable> 

<replaceable>&lt;subroutine implimentation&gt;</replaceable> ::= <replaceable>&lt;subfunc_impl&gt;</replaceable> | <replaceable>&lt;subproc_impl&gt;</replaceable>

<replaceable>&lt;external body reference&gt;</replaceable> ::=
  EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> [AS <replaceable>&lt;extbody&gt;</replaceable>]

<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'  
                      
                                                    </literallayout>
            </para>
        </formalpara>

        <para>Для внешних процедур и функций в заголовке пакета указываются имя, входные параметры,
            их типы, значения по умолчанию, и выходные параметры, а в теле пакета всё тоже самое,
            кроме значений по умолчанию, а также место расположения во внешнем модуле (предложение
            EXTERNAL NAME), имя движка, и возможно "тело" процедуры/функции.</para>

        <example>
            <title>Расположение внешних процедур и функций в пакете</title>

            <para>Предположим вы написали UDR для работы с регулярными выражениями, которая
                расположена во внешнем модуле (динамической библиотеке) PCRE, и у вас есть ещё
                несколько UDR выполняющих другие задачи. Если бы мы не использовали PSQL пакеты, то
                все наши внешние процедуры и функции были бы перемешаны как друг с другом, так и с
                обычными PSQL процедурами и функциями. Это усложняет поиск зависимостей и внесение
                изменений во внешние модули, а кроме того создаёт путаницу, и заставляет как минимум
                использовать префиксы для группировки процедур и функций. PSQL пакеты значительно
                облегчают нам эту задачу. </para>

            <para>
                <programlisting language="sql">
SET TERM ^;

CREATE OR ALTER PACKAGE REGEXP
AS
BEGIN
  PROCEDURE preg_match(
      APattern VARCHAR(8192), ASubject VARCHAR(8192))
    RETURNS (Matches VARCHAR(8192));

  FUNCTION preg_is_match(
      APattern VARCHAR(8192), ASubject VARCHAR(8192))
    RETURNS BOOLEAN;

  FUNCTION preg_replace(
      APattern VARCHAR(8192), 
      AReplacement VARCHAR(8192),
      ASubject VARCHAR(8192)) 
    RETURNS VARCHAR(8192);

  PROCEDURE preg_split(
      APattern VARCHAR(8192), 
      ASubject VARCHAR(8192))
    RETURNS (Lines VARCHAR(8192));

  FUNCTION preg_quote(
      AStr VARCHAR(8192), 
      ADelimiter CHAR(10) DEFAULT NULL)
    RETURNS VARCHAR(8192);
END^

RECREATE PACKAGE BODY REGEXP
AS
BEGIN
  PROCEDURE preg_match(
      APattern VARCHAR(8192), 
      ASubject VARCHAR(8192))
    RETURNS (Matches VARCHAR(8192))
    EXTERNAL NAME 'PCRE!preg_match' ENGINE UDR;

  FUNCTION preg_is_match(
      APattern VARCHAR(8192), 
      ASubject VARCHAR(8192))
    RETURNS BOOLEAN
  AS
  BEGIN
    RETURN EXISTS(
      SELECT * FROM preg_match(:APattern, :ASubject));
  END

  FUNCTION preg_replace(
      APattern VARCHAR(8192), 
      AReplacement VARCHAR(8192),
      ASubject VARCHAR(8192)) 
    RETURNS VARCHAR(8192)
    EXTERNAL NAME 'PCRE!preg_replace' ENGINE UDR;

  PROCEDURE preg_split(
      APattern VARCHAR(8192), 
      ASubject VARCHAR(8192))
    RETURNS (Lines VARCHAR(8192))
    EXTERNAL NAME 'PCRE!preg_split' ENGINE UDR;

  FUNCTION preg_quote(
      AStr VARCHAR(8192), 
      ADelimiter CHAR(10))
    RETURNS VARCHAR(8192)
    EXTERNAL NAME 'PCRE!preg_quote' ENGINE UDR;
END^

SET TERM ;^   
                </programlisting>
            </para>

        </example>
    </section>

    <section xml:id="udr-trigger">
        <info>
            <title>Внешние триггеры</title>
        </info>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
{CREATE [OR ALTER] | RECREATE} TRIGGER <replaceable>trigname</replaceable> 
{   
    <replaceable>&lt;relation_trigger_legacy&gt;</replaceable>
  | <replaceable>&lt;relation_trigger_sql2003&gt;</replaceable>
  | <replaceable>&lt;database_trigger&gt;</replaceable> 
  | <replaceable>&lt;ddl_trigger&gt;</replaceable> 
}
<replaceable>&lt;external-body&gt;</replaceable>
                
<replaceable>&lt;external-body&gt;</replaceable> ::=                 
  EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> 
  [AS <replaceable>&lt;extbody&gt;</replaceable>]
  
<replaceable>&lt;relation_trigger_legacy&gt;</replaceable> ::= 
  FOR {<replaceable>tablename</replaceable> | <replaceable>viewname</replaceable>}
  [ACTIVE | INACTIVE]
  {BEFORE | AFTER} <replaceable>&lt;mutation_list&gt;</replaceable>
  [POSITION <replaceable>number</replaceable>]

<replaceable>&lt;relation_trigger_sql2003&gt;</replaceable> ::= 
  [ACTIVE | INACTIVE]
  {BEFORE | AFTER} <replaceable>&lt;mutation_list&gt;</replaceable>
  [POSITION <replaceable>number</replaceable>]
  ON {<replaceable>tablename</replaceable> | <replaceable>viewname</replaceable>}

<replaceable>&lt;database_trigger&gt;</replaceable> ::= 
  [ACTIVE | INACTIVE] 
  ON <replaceable>db_event</replaceable>
  [POSITION <replaceable>number</replaceable>]
                    
<replaceable>&lt;ddl_trigger&gt;</replaceable> ::=  
  [ACTIVE | INACTIVE]
  {BEFORE | AFTER} <replaceable>&lt;ddl_events&gt;</replaceable>
  [POSITION <replaceable>number</replaceable>]                    

<replaceable>&lt;mutation_list&gt;</replaceable> ::= <replaceable>&lt;mutation&gt;</replaceable> [OR <replaceable>&lt;mutation&gt;</replaceable> [OR <replaceable>&lt;mutation&gt;</replaceable>]]

<replaceable>&lt;mutation&gt;</replaceable> ::= INSERT | UPDATE | DELETE 

<replaceable>&lt;db_event&gt;</replaceable> ::=  
    CONNECT 
  | DISCONNECT 
  | TRANSACTION START 
  | TRANSACTION COMMIT 
  | TRANSACTION ROLLBACK 


<replaceable>&lt;ddl_events&gt;</replaceable> ::= 
    ANY DDL STATEMENT
  | <replaceable>&lt;ddl_event_item&gt;</replaceable> [{OR <replaceable>&lt;ddl_event_item&gt;</replaceable>} ...]

<replaceable>&lt;ddl_event_item&gt;</replaceable> ::=
    CREATE TABLE | ALTER TABLE | DROP TABLE
  | CREATE PROCEDURE | ALTER PROCEDURE | DROP PROCEDURE
  | CREATE FUNCTION | ALTER FUNCTION | DROP FUNCTION
  | CREATE TRIGGER | ALTER TRIGGER | DROP TRIGGER
  | CREATE EXCEPTION | ALTER EXCEPTION | DROP EXCEPTION
  | CREATE VIEW | ALTER VIEW | DROP VIEW
  | CREATE DOMAIN | ALTER DOMAIN | DROP DOMAIN
  | CREATE ROLE | ALTER ROLE | DROP ROLE
  | CREATE SEQUENCE | ALTER SEQUENCE | DROP SEQUENCE
  | CREATE USER | ALTER USER | DROP USER
  | CREATE INDEX | ALTER INDEX | DROP INDEX
  | CREATE COLLATION | DROP COLLATION
  | ALTER CHARACTER SET
  | CREATE PACKAGE | ALTER PACKAGE | DROP PACKAGE
  | CREATE PACKAGE BODY | DROP PACKAGE BODY 
  | CREATE MAPPING | ALTER MAPPING | DROP MAPPING
                       </literallayout>
            </para>
        </formalpara>

        <para>Внешний триггер можно изменить с помощью оператора ALTER TRIGGER.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
ALTER TRIGGER <replaceable>trigname</replaceable> {   
[ACTIVE | INACTIVE]
[
    {BEFORE | AFTER} {<replaceable>&lt;mutation_list&gt;</replaceable> | <replaceable>&lt;ddl_events&gt;</replaceable>}
  | ON <replaceable>db_event</replaceable>
]
[POSITION <replaceable>number</replaceable>]
[<replaceable>&lt;external-body&gt;</replaceable>]
                
<replaceable>&lt;external-body&gt;</replaceable> ::=                 
  EXTERNAL NAME <replaceable>&lt;extname&gt;</replaceable> ENGINE <replaceable>&lt;engine&gt;</replaceable> 
  [AS <replaceable>&lt;extbody&gt;</replaceable>]
                
<replaceable>&lt;extname&gt;</replaceable> ::= '<replaceable>&lt;module name&gt;</replaceable>!<replaceable>&lt;routine name&gt;</replaceable>[!<replaceable>&lt;misc info&gt;</replaceable>]'                 

<replaceable>&lt;mutation_list&gt;</replaceable> ::= <replaceable>&lt;mutation&gt;</replaceable> [OR <replaceable>&lt;mutation&gt;</replaceable> [OR <replaceable>&lt;mutation&gt;</replaceable>]]

<replaceable>&lt;mutation&gt;</replaceable> ::= { INSERT | UPDATE | DELETE }
  
                       </literallayout>
            </para>
        </formalpara>

        <para>Удалить внешний триггер можно с помощью оператора DROP TRIGGER.</para>

        <formalpara>
            <title>Синтаксис:</title>

            <para><literallayout class="monospaced">
DROP TRIGGER <replaceable>trigname</replaceable>                  
                       </literallayout></para>
        </formalpara>

        <para>
            <table frame="all">
                <title>Некоторые параметры внешнего триггера</title>
                <?dbfo keep-together='auto'?>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.33*" align="left"/>
                    <colspec colname="c2" colnum="2" colwidth="2.67*" align="justify"/>
                    <thead>
                        <row>
                            <entry align="center">Параметр</entry>
                            <entry align="center">Описание</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><replaceable>trigname</replaceable></entry>
                            <entry>
                                <para>Имя триггера. Может содержать до 31 байта.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>relation_trigger_legacy</replaceable></entry>
                            <entry>
                                <para>Объявление табличного триггера (унаследованное). </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>relation_trigger_sql2003</replaceable></entry>
                            <entry>
                                <para>Объявление табличного триггера согласно стандарту SQL-2003.
                                </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>database_trigger</replaceable></entry>
                            <entry>
                                <para>Объявление триггера базы данных. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>ddl_trigger</replaceable></entry>
                            <entry>
                                <para>Объявление DDL триггера. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>tablename</replaceable></entry>
                            <entry>
                                <para>Имя таблицы.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>viewname</replaceable></entry>
                            <entry>
                                <para>Имя представления. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>mutation_list</replaceable></entry>
                            <entry>
                                <para>Список событий таблицы. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>mutation</replaceable></entry>
                            <entry>
                                <para>Одно из событий таблицы. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>db_event</replaceable></entry>
                            <entry>
                                <para>Событие соединения или транзакции. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>ddl_events</replaceable></entry>
                            <entry>
                                <para>Список событий изменения метаданных. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>ddl_event_item</replaceable></entry>
                            <entry>
                                <para>Одно из событий изменения метаданных.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>number</replaceable></entry>
                            <entry>
                                <para>Порядок срабатывания триггера. От 0 до 32767.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>extbody</replaceable></entry>
                            <entry>Тело внешнего триггера. Строковый литерал который может
                                использоваться UDR для различных целей.</entry>
                        </row>
                        <row>
                            <entry><replaceable>module name</replaceable></entry>
                            <entry>
                                <para>Имя внешнего модуля, в котором расположен триггер.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>routine name</replaceable></entry>
                            <entry>
                                <para>Внутреннее имя триггера внутри внешнего модуля. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>misc info</replaceable></entry>
                            <entry>
                                <para>Определяемая пользователем информация для передачи в триггер
                                    внешнего модуля. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>engine</replaceable></entry>
                            <entry>
                                <para>Имя движка для использования внешних триггеров. Обычно
                                    указывается имя UDR. </para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>Приведём примеры объявления внешних триггеров с пояснениями.</para>

        <example>
            <title>Внешний триггер репликации в другую базу данных</title>

            <para>
                <programlisting language="sql">
create database 'c:\temp\slave.fdb';

create table persons (
    id integer not null,
    name varchar(60) not null,
    address varchar(60),
    info blob sub_type text
);

commit;

create database 'c:\temp\master.fdb';

create table persons (
    id integer not null,
    name varchar(60) not null,
    address varchar(60),
    info blob sub_type text
);

create table replicate_config (
    name varchar(31) not null,
    data_source varchar(255) not null
);

insert into replicate_config (name, data_source)
   values ('ds1', 'c:\temp\slave.fdb');

create trigger persons_replicate
    after insert on persons
    external name 'udrcpp_example!replicate!ds1'
    engine udr;              
                       </programlisting>
            </para>

            <para>Реализация триггера находится в модуле udrcpp_example. Внутри этого модуля триггер
                зарегистрирован под именем replicate. Для работы внешнего триггера используется
                движок UDR.</para>

            <para>В ссылке на внешний модуль используется дополнительный параметр
                    <literal>ds1</literal>, по которому внутри внешнего триггера из таблицы
                    <emphasis role="italic">replicate_config</emphasis> читается конфигурация для
                связи с внешней базой данных.</para>
        </example>
    </section>
</chapter>
